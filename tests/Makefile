# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright 2011 Bradford Hovinen
# 
# This file is part of LELA, licensed under the GNU General Public
# License version 3. See COPYING for more information.


pkgdatadir = $(datadir)/lela
pkgincludedir = $(includedir)/lela
pkglibdir = $(libdir)/lela
pkglibexecdir = $(libexecdir)/lela
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
EXTRA_PROGRAMS = $(am__EXEEXT_1)
TESTS = $(am__EXEEXT_2)
check_PROGRAMS = $(am__EXEEXT_3)
subdir = tests
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/blas-check.m4 \
	$(top_srcdir)/macros/gmp-check.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/m4_ax_prefix_config_h.m4 \
	$(top_srcdir)/macros/m4ri-check.m4 \
	$(top_srcdir)/macros/png-check.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/lela/lela-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = benchmark-blas$(EXEEXT)
am__EXEEXT_2 = test-commentator$(EXEEXT) test-integers$(EXEEXT) \
	test-rationals$(EXEEXT) test-modular$(EXEEXT) \
	test-modular-double$(EXEEXT) test-gf2$(EXEEXT) \
	test-type-wrapper-ring$(EXEEXT) test-randiter-nonzero$(EXEEXT) \
	test-vector$(EXEEXT) test-subiterator$(EXEEXT) \
	test-subvector$(EXEEXT) test-bit-subvector$(EXEEXT) \
	test-hybrid-vector$(EXEEXT) test-matrix$(EXEEXT) \
	test-blas-generic-module$(EXEEXT) \
	test-blas-generic-module-gf2$(EXEEXT) \
	test-blas-zp-module$(EXEEXT) test-blas-cblas-module$(EXEEXT) \
	test-strassen-winograd$(EXEEXT) test-elimination$(EXEEXT) \
	test-gauss-jordan$(EXEEXT) test-splicer$(EXEEXT) \
	test-faugere-lachartre$(EXEEXT)
am__EXEEXT_3 = $(am__EXEEXT_2)
am_benchmark_blas_OBJECTS = benchmark_blas-benchmark-blas.$(OBJEXT) \
	benchmark_blas-test-common.$(OBJEXT)
benchmark_blas_OBJECTS = $(am_benchmark_blas_OBJECTS)
benchmark_blas_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
benchmark_blas_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
benchmark_blas_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(benchmark_blas_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_bit_subvector_OBJECTS = test-bit-subvector.$(OBJEXT) \
	test-common.$(OBJEXT)
test_bit_subvector_OBJECTS = $(am_test_bit_subvector_OBJECTS)
test_bit_subvector_LDADD = $(LDADD)
test_bit_subvector_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_blas_cblas_module_OBJECTS = test-blas-cblas-module.$(OBJEXT) \
	test-common.$(OBJEXT)
test_blas_cblas_module_OBJECTS = $(am_test_blas_cblas_module_OBJECTS)
test_blas_cblas_module_LDADD = $(LDADD)
test_blas_cblas_module_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_blas_generic_module_OBJECTS =  \
	test-blas-generic-module.$(OBJEXT) test-common.$(OBJEXT)
test_blas_generic_module_OBJECTS =  \
	$(am_test_blas_generic_module_OBJECTS)
test_blas_generic_module_LDADD = $(LDADD)
test_blas_generic_module_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_blas_generic_module_gf2_OBJECTS =  \
	test-blas-generic-module-gf2.$(OBJEXT) test-common.$(OBJEXT)
test_blas_generic_module_gf2_OBJECTS =  \
	$(am_test_blas_generic_module_gf2_OBJECTS)
test_blas_generic_module_gf2_LDADD = $(LDADD)
test_blas_generic_module_gf2_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_blas_zp_module_OBJECTS = test-blas-zp-module.$(OBJEXT) \
	test-common.$(OBJEXT)
test_blas_zp_module_OBJECTS = $(am_test_blas_zp_module_OBJECTS)
test_blas_zp_module_LDADD = $(LDADD)
test_blas_zp_module_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_commentator_OBJECTS = test-commentator.$(OBJEXT) \
	test-common.$(OBJEXT)
test_commentator_OBJECTS = $(am_test_commentator_OBJECTS)
test_commentator_LDADD = $(LDADD)
test_commentator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_elimination_OBJECTS = test-common.$(OBJEXT) \
	test-elimination.$(OBJEXT)
test_elimination_OBJECTS = $(am_test_elimination_OBJECTS)
test_elimination_LDADD = $(LDADD)
test_elimination_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_faugere_lachartre_OBJECTS = test-common.$(OBJEXT) \
	test-faugere-lachartre.$(OBJEXT)
test_faugere_lachartre_OBJECTS = $(am_test_faugere_lachartre_OBJECTS)
test_faugere_lachartre_LDADD = $(LDADD)
test_faugere_lachartre_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_gauss_jordan_OBJECTS = test-common.$(OBJEXT) \
	test-gauss-jordan.$(OBJEXT)
test_gauss_jordan_OBJECTS = $(am_test_gauss_jordan_OBJECTS)
test_gauss_jordan_LDADD = $(LDADD)
test_gauss_jordan_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_gf2_OBJECTS = test-gf2.$(OBJEXT) test-common.$(OBJEXT)
test_gf2_OBJECTS = $(am_test_gf2_OBJECTS)
test_gf2_LDADD = $(LDADD)
test_gf2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/lela/liblela.la
am_test_hybrid_vector_OBJECTS = test-hybrid-vector.$(OBJEXT) \
	test-common.$(OBJEXT)
test_hybrid_vector_OBJECTS = $(am_test_hybrid_vector_OBJECTS)
test_hybrid_vector_LDADD = $(LDADD)
test_hybrid_vector_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_integers_OBJECTS = test-integers.$(OBJEXT) \
	test-common.$(OBJEXT)
test_integers_OBJECTS = $(am_test_integers_OBJECTS)
test_integers_LDADD = $(LDADD)
test_integers_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_matrix_OBJECTS = test-matrix.$(OBJEXT) test-common.$(OBJEXT)
test_matrix_OBJECTS = $(am_test_matrix_OBJECTS)
test_matrix_LDADD = $(LDADD)
test_matrix_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/lela/liblela.la
am_test_modular_OBJECTS = test-modular.$(OBJEXT) test-common.$(OBJEXT)
test_modular_OBJECTS = $(am_test_modular_OBJECTS)
test_modular_LDADD = $(LDADD)
test_modular_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_modular_double_OBJECTS = test-modular-double.$(OBJEXT) \
	test-common.$(OBJEXT)
test_modular_double_OBJECTS = $(am_test_modular_double_OBJECTS)
test_modular_double_LDADD = $(LDADD)
test_modular_double_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_randiter_nonzero_OBJECTS = test-randiter-nonzero.$(OBJEXT) \
	test-common.$(OBJEXT)
test_randiter_nonzero_OBJECTS = $(am_test_randiter_nonzero_OBJECTS)
test_randiter_nonzero_LDADD = $(LDADD)
test_randiter_nonzero_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_rationals_OBJECTS = test-rationals.$(OBJEXT) \
	test-common.$(OBJEXT)
test_rationals_OBJECTS = $(am_test_rationals_OBJECTS)
test_rationals_LDADD = $(LDADD)
test_rationals_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_splicer_OBJECTS = test-splicer.$(OBJEXT) test-common.$(OBJEXT)
test_splicer_OBJECTS = $(am_test_splicer_OBJECTS)
test_splicer_LDADD = $(LDADD)
test_splicer_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_strassen_winograd_OBJECTS = test-common.$(OBJEXT) \
	test-strassen-winograd.$(OBJEXT)
test_strassen_winograd_OBJECTS = $(am_test_strassen_winograd_OBJECTS)
test_strassen_winograd_LDADD = $(LDADD)
test_strassen_winograd_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_subiterator_OBJECTS = test-subiterator.$(OBJEXT) \
	test-common.$(OBJEXT)
test_subiterator_OBJECTS = $(am_test_subiterator_OBJECTS)
test_subiterator_LDADD = $(LDADD)
test_subiterator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_subvector_OBJECTS = test-subvector.$(OBJEXT) \
	test-common.$(OBJEXT)
test_subvector_OBJECTS = $(am_test_subvector_OBJECTS)
test_subvector_LDADD = $(LDADD)
test_subvector_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_type_wrapper_ring_OBJECTS = test-type-wrapper-ring.$(OBJEXT) \
	test-common.$(OBJEXT)
test_type_wrapper_ring_OBJECTS = $(am_test_type_wrapper_ring_OBJECTS)
test_type_wrapper_ring_LDADD = $(LDADD)
test_type_wrapper_ring_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lela/liblela.la
am_test_vector_OBJECTS = test-vector.$(OBJEXT) test-common.$(OBJEXT)
test_vector_OBJECTS = $(am_test_vector_OBJECTS)
test_vector_LDADD = $(LDADD)
test_vector_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/lela/liblela.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)/lela
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(benchmark_blas_SOURCES) $(test_bit_subvector_SOURCES) \
	$(test_blas_cblas_module_SOURCES) \
	$(test_blas_generic_module_SOURCES) \
	$(test_blas_generic_module_gf2_SOURCES) \
	$(test_blas_zp_module_SOURCES) $(test_commentator_SOURCES) \
	$(test_elimination_SOURCES) $(test_faugere_lachartre_SOURCES) \
	$(test_gauss_jordan_SOURCES) $(test_gf2_SOURCES) \
	$(test_hybrid_vector_SOURCES) $(test_integers_SOURCES) \
	$(test_matrix_SOURCES) $(test_modular_SOURCES) \
	$(test_modular_double_SOURCES) \
	$(test_randiter_nonzero_SOURCES) $(test_rationals_SOURCES) \
	$(test_splicer_SOURCES) $(test_strassen_winograd_SOURCES) \
	$(test_subiterator_SOURCES) $(test_subvector_SOURCES) \
	$(test_type_wrapper_ring_SOURCES) $(test_vector_SOURCES)
DIST_SOURCES = $(benchmark_blas_SOURCES) $(test_bit_subvector_SOURCES) \
	$(test_blas_cblas_module_SOURCES) \
	$(test_blas_generic_module_SOURCES) \
	$(test_blas_generic_module_gf2_SOURCES) \
	$(test_blas_zp_module_SOURCES) $(test_commentator_SOURCES) \
	$(test_elimination_SOURCES) $(test_faugere_lachartre_SOURCES) \
	$(test_gauss_jordan_SOURCES) $(test_gf2_SOURCES) \
	$(test_hybrid_vector_SOURCES) $(test_integers_SOURCES) \
	$(test_matrix_SOURCES) $(test_modular_SOURCES) \
	$(test_modular_double_SOURCES) \
	$(test_randiter_nonzero_SOURCES) $(test_rationals_SOURCES) \
	$(test_splicer_SOURCES) $(test_strassen_winograd_SOURCES) \
	$(test_subiterator_SOURCES) $(test_subvector_SOURCES) \
	$(test_type_wrapper_ring_SOURCES) $(test_vector_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/polsys1/martani/workspace/LELA/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/polsys1/martani/workspace/LELA/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/polsys1/martani/workspace/LELA/missing --run autoconf
AUTOHEADER = ${SHELL} /home/polsys1/martani/workspace/LELA/missing --run autoheader
AUTOMAKE = ${SHELL} /home/polsys1/martani/workspace/LELA/missing --run automake-1.11
AWK = gawk
BLAS_LIBS = 
CC = gcc
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CXX = clang
CXXCPP = clang -E
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DLLTOOL = false
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GMP_CFLAGS = 
GMP_LIBS = -lgmp -lgmpxx
GMP_VERSION = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
M4RI_CFLAGS = 
M4RI_LIBS = 
MAINT = #
MAKEINFO = ${SHELL} /home/polsys1/martani/workspace/LELA/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = lela
PACKAGE_BUGREPORT = lela-users@googlegroups.com
PACKAGE_NAME = lela
PACKAGE_STRING = lela 0.1.0
PACKAGE_TARNAME = lela
PACKAGE_URL = 
PACKAGE_VERSION = 0.1.0
PATH_SEPARATOR = :
PNG_CFLAGS = 
PNG_LIBS = -lpng
RANLIB = ranlib
RM = /bin/rm -f
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1.0
XMLTO = 
abs_builddir = /home/polsys1/martani/workspace/LELA/tests
abs_srcdir = /home/polsys1/martani/workspace/LELA/tests
abs_top_builddir = /home/polsys1/martani/workspace/LELA
abs_top_srcdir = /home/polsys1/martani/workspace/LELA
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__leading_dot = .
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/polsys1/martani/workspace/LELA/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = -I$(top_srcdir) -I$(top_builddir)
AM_CXXFLAGS = -g -Wall -DDEBUG -O0
BENCHMARK_CXXFLAGS = -O2
SUBDIRS = data
AM_CPPFLAGS = $(GMP_CFLAGS) $(PNG_CFLAGS) $(M4RI_CFLAGS)
LDADD = $(GMP_LIBS)  $(PNG_LIBS) $(M4RI_LIBS) $(BLAS_LIBS) $(top_builddir)/lela/liblela.la

# Put an entry for your test-mycomponent.C here (or in one of the other test groups).  
# Don't forget to add a test_mycomponent_SOURCES entry below.
#
# Once present, tests should remain present, being moved from one group to another.
# Note that among the available groups are NONCOMPILING_TESTS and FAILING_TESTS, which
# will be ignored by "make check" and can be temporary storage for problematic tests.
BASIC_TESTS = \
        test-commentator        \
        test-integers		\
        test-rationals		\
        test-modular            \
        test-modular-double     \
        test-gf2                \
        test-type-wrapper-ring	\
        test-randiter-nonzero   \
	test-vector		\
        test-subiterator        \
        test-subvector          \
	test-bit-subvector	\
	test-hybrid-vector	\
	test-matrix		\
        test-blas-generic-module      \
	test-blas-generic-module-gf2	\
        test-blas-zp-module     \
	test-blas-cblas-module	\
	test-strassen-winograd	\
	test-elimination	\
	test-gauss-jordan	\
	test-splicer		\
	test-faugere-lachartre


# a benchmarker, not to be included in check.
BENCHMARKS = \
	benchmark-blas

CLEANFILES = $(TESTS)
test_commentator_SOURCES = \
        test-commentator.C                \
        test-common.C

test_modular_SOURCES = \
        test-modular.C                        \
        test-common.C

test_gf2_SOURCES = \
        test-gf2.C                        \
        test-common.C

test_integers_SOURCES = \
        test-integers.C               \
        test-common.C

test_rationals_SOURCES = \
        test-rationals.C               \
        test-common.C

test_type_wrapper_ring_SOURCES = \
        test-type-wrapper-ring.C        \
        test-common.C

test_randiter_nonzero_SOURCES = \
        test-randiter-nonzero.C          \
        test-common.C

test_subiterator_SOURCES = \
        test-subiterator.C                \
        test-common.C

test_subvector_SOURCES = \
        test-subvector.C                \
        test-common.C

test_blas_generic_module_SOURCES = \
        test-blas-generic-module.C   \
        test-blas-level1.h           \
        test-blas-level2.h           \
        test-blas-level3.h           \
        test-common.C

test_blas_generic_module_gf2_SOURCES = \
        test-blas-generic-module-gf2.C \
        test-blas-level1.h             \
        test-blas-level2.h             \
        test-blas-level3.h             \
        test-common.C

test_blas_zp_module_SOURCES = \
        test-blas-zp-module.C   \
        test-blas-level1.h           \
        test-blas-level2.h           \
        test-blas-level3.h           \
        test-common.C

test_blas_cblas_module_SOURCES = \
        test-blas-cblas-module.C   \
        test-blas-level1.h           \
        test-blas-level2.h           \
        test-blas-level3.h           \
        test-common.C

test_modular_double_SOURCES = \
        test-modular-double.C                \
        test-common.C

test_vector_SOURCES = \
	test-vector.C \
	test-common.C \
	test-vector.h

test_matrix_SOURCES = \
	test-matrix.C \
	test-common.C \
	test-matrix.h

test_bit_subvector_SOURCES = \
	test-bit-subvector.C \
	test-common.C

test_hybrid_vector_SOURCES = \
	test-hybrid-vector.C \
	test-common.C

test_strassen_winograd_SOURCES = \
	test-common.C		\
	test-strassen-winograd.C

test_elimination_SOURCES = \
	test-common.C		\
	test-elimination.C

test_gauss_jordan_SOURCES = \
	test-common.C		\
	test-gauss-jordan.C

test_splicer_SOURCES = \
	test-splicer.C	\
	test-common.C

test_faugere_lachartre_SOURCES = \
	test-common.C		\
	test-faugere-lachartre.C

benchmark_blas_CXXFLAGS = -O2
benchmark_blas_SOURCES = \
	benchmark-blas.C    \
	test-common.C	    \
	test-blas-level3.h

benchmark_matrix_domain_CXXFLAGS = ${BENCHMARK_CXXFLAGS}
noinst_HEADERS = \
	test-common.h	\
	test-ring.h	\
	test-vector.h	\
	test-matrix.h	\
	test-blas-level1.h	\
	test-blas-level2.h	\
	test-blas-level3.h

all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
benchmark-blas$(EXEEXT): $(benchmark_blas_OBJECTS) $(benchmark_blas_DEPENDENCIES) 
	@rm -f benchmark-blas$(EXEEXT)
	$(benchmark_blas_LINK) $(benchmark_blas_OBJECTS) $(benchmark_blas_LDADD) $(LIBS)
test-bit-subvector$(EXEEXT): $(test_bit_subvector_OBJECTS) $(test_bit_subvector_DEPENDENCIES) 
	@rm -f test-bit-subvector$(EXEEXT)
	$(CXXLINK) $(test_bit_subvector_OBJECTS) $(test_bit_subvector_LDADD) $(LIBS)
test-blas-cblas-module$(EXEEXT): $(test_blas_cblas_module_OBJECTS) $(test_blas_cblas_module_DEPENDENCIES) 
	@rm -f test-blas-cblas-module$(EXEEXT)
	$(CXXLINK) $(test_blas_cblas_module_OBJECTS) $(test_blas_cblas_module_LDADD) $(LIBS)
test-blas-generic-module$(EXEEXT): $(test_blas_generic_module_OBJECTS) $(test_blas_generic_module_DEPENDENCIES) 
	@rm -f test-blas-generic-module$(EXEEXT)
	$(CXXLINK) $(test_blas_generic_module_OBJECTS) $(test_blas_generic_module_LDADD) $(LIBS)
test-blas-generic-module-gf2$(EXEEXT): $(test_blas_generic_module_gf2_OBJECTS) $(test_blas_generic_module_gf2_DEPENDENCIES) 
	@rm -f test-blas-generic-module-gf2$(EXEEXT)
	$(CXXLINK) $(test_blas_generic_module_gf2_OBJECTS) $(test_blas_generic_module_gf2_LDADD) $(LIBS)
test-blas-zp-module$(EXEEXT): $(test_blas_zp_module_OBJECTS) $(test_blas_zp_module_DEPENDENCIES) 
	@rm -f test-blas-zp-module$(EXEEXT)
	$(CXXLINK) $(test_blas_zp_module_OBJECTS) $(test_blas_zp_module_LDADD) $(LIBS)
test-commentator$(EXEEXT): $(test_commentator_OBJECTS) $(test_commentator_DEPENDENCIES) 
	@rm -f test-commentator$(EXEEXT)
	$(CXXLINK) $(test_commentator_OBJECTS) $(test_commentator_LDADD) $(LIBS)
test-elimination$(EXEEXT): $(test_elimination_OBJECTS) $(test_elimination_DEPENDENCIES) 
	@rm -f test-elimination$(EXEEXT)
	$(CXXLINK) $(test_elimination_OBJECTS) $(test_elimination_LDADD) $(LIBS)
test-faugere-lachartre$(EXEEXT): $(test_faugere_lachartre_OBJECTS) $(test_faugere_lachartre_DEPENDENCIES) 
	@rm -f test-faugere-lachartre$(EXEEXT)
	$(CXXLINK) $(test_faugere_lachartre_OBJECTS) $(test_faugere_lachartre_LDADD) $(LIBS)
test-gauss-jordan$(EXEEXT): $(test_gauss_jordan_OBJECTS) $(test_gauss_jordan_DEPENDENCIES) 
	@rm -f test-gauss-jordan$(EXEEXT)
	$(CXXLINK) $(test_gauss_jordan_OBJECTS) $(test_gauss_jordan_LDADD) $(LIBS)
test-gf2$(EXEEXT): $(test_gf2_OBJECTS) $(test_gf2_DEPENDENCIES) 
	@rm -f test-gf2$(EXEEXT)
	$(CXXLINK) $(test_gf2_OBJECTS) $(test_gf2_LDADD) $(LIBS)
test-hybrid-vector$(EXEEXT): $(test_hybrid_vector_OBJECTS) $(test_hybrid_vector_DEPENDENCIES) 
	@rm -f test-hybrid-vector$(EXEEXT)
	$(CXXLINK) $(test_hybrid_vector_OBJECTS) $(test_hybrid_vector_LDADD) $(LIBS)
test-integers$(EXEEXT): $(test_integers_OBJECTS) $(test_integers_DEPENDENCIES) 
	@rm -f test-integers$(EXEEXT)
	$(CXXLINK) $(test_integers_OBJECTS) $(test_integers_LDADD) $(LIBS)
test-matrix$(EXEEXT): $(test_matrix_OBJECTS) $(test_matrix_DEPENDENCIES) 
	@rm -f test-matrix$(EXEEXT)
	$(CXXLINK) $(test_matrix_OBJECTS) $(test_matrix_LDADD) $(LIBS)
test-modular$(EXEEXT): $(test_modular_OBJECTS) $(test_modular_DEPENDENCIES) 
	@rm -f test-modular$(EXEEXT)
	$(CXXLINK) $(test_modular_OBJECTS) $(test_modular_LDADD) $(LIBS)
test-modular-double$(EXEEXT): $(test_modular_double_OBJECTS) $(test_modular_double_DEPENDENCIES) 
	@rm -f test-modular-double$(EXEEXT)
	$(CXXLINK) $(test_modular_double_OBJECTS) $(test_modular_double_LDADD) $(LIBS)
test-randiter-nonzero$(EXEEXT): $(test_randiter_nonzero_OBJECTS) $(test_randiter_nonzero_DEPENDENCIES) 
	@rm -f test-randiter-nonzero$(EXEEXT)
	$(CXXLINK) $(test_randiter_nonzero_OBJECTS) $(test_randiter_nonzero_LDADD) $(LIBS)
test-rationals$(EXEEXT): $(test_rationals_OBJECTS) $(test_rationals_DEPENDENCIES) 
	@rm -f test-rationals$(EXEEXT)
	$(CXXLINK) $(test_rationals_OBJECTS) $(test_rationals_LDADD) $(LIBS)
test-splicer$(EXEEXT): $(test_splicer_OBJECTS) $(test_splicer_DEPENDENCIES) 
	@rm -f test-splicer$(EXEEXT)
	$(CXXLINK) $(test_splicer_OBJECTS) $(test_splicer_LDADD) $(LIBS)
test-strassen-winograd$(EXEEXT): $(test_strassen_winograd_OBJECTS) $(test_strassen_winograd_DEPENDENCIES) 
	@rm -f test-strassen-winograd$(EXEEXT)
	$(CXXLINK) $(test_strassen_winograd_OBJECTS) $(test_strassen_winograd_LDADD) $(LIBS)
test-subiterator$(EXEEXT): $(test_subiterator_OBJECTS) $(test_subiterator_DEPENDENCIES) 
	@rm -f test-subiterator$(EXEEXT)
	$(CXXLINK) $(test_subiterator_OBJECTS) $(test_subiterator_LDADD) $(LIBS)
test-subvector$(EXEEXT): $(test_subvector_OBJECTS) $(test_subvector_DEPENDENCIES) 
	@rm -f test-subvector$(EXEEXT)
	$(CXXLINK) $(test_subvector_OBJECTS) $(test_subvector_LDADD) $(LIBS)
test-type-wrapper-ring$(EXEEXT): $(test_type_wrapper_ring_OBJECTS) $(test_type_wrapper_ring_DEPENDENCIES) 
	@rm -f test-type-wrapper-ring$(EXEEXT)
	$(CXXLINK) $(test_type_wrapper_ring_OBJECTS) $(test_type_wrapper_ring_LDADD) $(LIBS)
test-vector$(EXEEXT): $(test_vector_OBJECTS) $(test_vector_DEPENDENCIES) 
	@rm -f test-vector$(EXEEXT)
	$(CXXLINK) $(test_vector_OBJECTS) $(test_vector_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

benchmark_blas-benchmark-blas.o: benchmark-blas.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(benchmark_blas_CXXFLAGS) $(CXXFLAGS) -c -o benchmark_blas-benchmark-blas.o `test -f 'benchmark-blas.C' || echo '$(srcdir)/'`benchmark-blas.C

benchmark_blas-benchmark-blas.obj: benchmark-blas.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(benchmark_blas_CXXFLAGS) $(CXXFLAGS) -c -o benchmark_blas-benchmark-blas.obj `if test -f 'benchmark-blas.C'; then $(CYGPATH_W) 'benchmark-blas.C'; else $(CYGPATH_W) '$(srcdir)/benchmark-blas.C'; fi`

benchmark_blas-test-common.o: test-common.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(benchmark_blas_CXXFLAGS) $(CXXFLAGS) -c -o benchmark_blas-test-common.o `test -f 'test-common.C' || echo '$(srcdir)/'`test-common.C

benchmark_blas-test-common.obj: test-common.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(benchmark_blas_CXXFLAGS) $(CXXFLAGS) -c -o benchmark_blas-test-common.obj `if test -f 'test-common.C'; then $(CYGPATH_W) 'test-common.C'; else $(CYGPATH_W) '$(srcdir)/test-common.C'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) check-am \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
