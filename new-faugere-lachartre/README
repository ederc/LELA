A new implementation of Faugere-Lachartre method for LELA.

# Compile and run:

- Clone (this) repository from github
- Run:
  ./autogen
  ./configure
  make
  
- Compile the new test programs:

  cd new-faugere-lachartre
  make test-faugere-lachartre
  make test-splicer-indexer
  make test-structured-gauss
  
  
# Test programs:
1. test-faugere-lachartre: 
  This file contains the new implementation of Faugere-Lachartre method along with helpers to validate the results and to compare against the current implementation of LELA.
  
  Parameters:
   -f 	/path/to/matrix/file
   - 	(just dash with now parameter) show all the log messages
   -v 	show short log messages
   -r 	verify the results with the structured gaussian elimination
   -l 	run LELA's Faugere-Lachartre method
   
2. test-splicer-indexer:
  Show performance differences between LELA builtin Splicer and our faster implementation
  
  Parameters:
  -f 	/path/to/matrix/file
  - 	(just dash with now parameter) show all the log messages
  -v 	show short log messages
  
  
3. test-structured-gauss:
  Performs a reduced Gaussian elimination over a matrix
  
  Parameters:
  -f 	/path/to/matrix/file
  - 	(just dash with now parameter) show all the log messages
  -v 	show short log messages
  
  
Some timings (on an intel core i3 / No BLAS / Over F(65521)):

[Faugere-Lachartre reduced row echelon form computation]
Matrix (rows x cols)	Density		New Faugere-Lachartre	LELA's Faugere-Lachartre
2297 x 3015		6.75947		1.218s			30.35s
3321 x 4507		5.67165		3.156s			96.08s
7757 x 9161		5.38004		21s			--


[Splicer performance]
Matrix (rows x cols)	Density		New Splicer	LELA's Splicer
2297 x 3015		6.75947		0.01s		0.156s
4929 x 5703		6.15027		0.035s		0.507s
10014 x 14110		2.97443		0.085s		3.099s
